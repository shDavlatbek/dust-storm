"""Add geo models

Revision ID: 0e5e1030d2a9
Revises: e29c437658ad
Create Date: 2024-11-29 19:41:39.431961

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0e5e1030d2a9'
down_revision: Union[str, None] = 'e29c437658ad'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coordinate',
    sa.Column('latitude_degree', sa.Float(), nullable=True),
    sa.Column('latitude_minute', sa.Float(), nullable=True),
    sa.Column('latitude_second', sa.Float(), nullable=True),
    sa.Column('longitude_degree', sa.Float(), nullable=True),
    sa.Column('longitude_minute', sa.Float(), nullable=True),
    sa.Column('longitude_second', sa.Float(), nullable=True),
    sa.Column('x', sa.Float(), nullable=True),
    sa.Column('y', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geo_organization',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geo_station',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geo_welltype',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geo_well',
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('region', sa.Integer(), nullable=True),
    sa.Column('district', sa.Integer(), nullable=True),
    sa.Column('organization', sa.Integer(), nullable=True),
    sa.Column('station', sa.Integer(), nullable=True),
    sa.Column('location', sa.Integer(), nullable=True),
    sa.Column('well_type', sa.Integer(), nullable=True),
    sa.Column('coordinate', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=250), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['coordinate'], ['coordinate.id'], ),
    sa.ForeignKeyConstraint(['district'], ['district.id'], ),
    sa.ForeignKeyConstraint(['location'], ['location.id'], ),
    sa.ForeignKeyConstraint(['organization'], ['geo_organization.id'], ),
    sa.ForeignKeyConstraint(['region'], ['region.id'], ),
    sa.ForeignKeyConstraint(['station'], ['geo_station.id'], ),
    sa.ForeignKeyConstraint(['well_type'], ['geo_welltype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('geo_well')
    op.drop_table('location')
    op.drop_table('geo_welltype')
    op.drop_table('geo_station')
    op.drop_table('geo_organization')
    op.drop_table('coordinate')
    # ### end Alembic commands ###
